class Solution(object):
    def subarrayLCM(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        from fractions import gcd

        def lcm(a, b):
            return a * b // gcd(a, b)

        n = len(nums)
        count = 0
        for i in range(n):
            curr_lcm = nums[i]
            if curr_lcm == k:
                count += 1
            for j in range(i + 1, n):
                if k % nums[j] != 0:
                    break
                curr_lcm = lcm(curr_lcm, nums[j])
                if curr_lcm > k:
                    break
                if curr_lcm == k:
                    count += 1
        return count
